#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
from i3pystatus import Status
from i3pystatus.core.modules import IntervalModule

class PacmanStatusModule(IntervalModule):

    text = 'Packages: {}'
    interval = 60 * 5
    color = '#00FF00'

    def run(self):
        package_status = self._get_package_status()
        self.output = {
            'full_text': self.text.format(package_status),
            'color': self.color,
        }

    def _get_package_status(self):
        updated_packages = subprocess.Popen(
            ['checkupdates'], stdout=subprocess.PIPE
        )
        number_of_lines = subprocess.Popen(
            ['wc', '-l'], stdin=updated_packages.stdout, stdout=subprocess.PIPE
        )
        number_of_packages = number_of_lines.communicate()[0].decode('utf-8')
        number_of_packages = number_of_packages[:-1]
        updated_packages.stdout.close()
        number_of_lines.stdout.close()

        if number_of_packages == '0':
            number_of_packages = 'up-to-date'

        return number_of_packages

status = Status(standalone=True)

status.register("clock", format="%d.%m.%y %H:%M:%S",)

status.register(PacmanStatusModule)

status.register("disk", path="/", format="R: {used}G ({avail}G free)")
status.register("disk", path="/home", format="H: {used}G ({avail}G free)")

status.register("cmus")

status.run()
